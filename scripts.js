/ 1. Сделайте функцию, которая отнимает от первого числа второе и делит на
// третье. Числа передаются параметром.
{
 // function result(a, b, c) {
 //    console.log((a - b) / c);
 //  }
  
 //  result(4, 2, 2);
}
// 2. Сделайте функцию, которая возвращает куб числа и его квадрат. Число
// передается параметром.
// {
// function resul(x) {
//   let pow = Math.pow(x, 3);
//   let sqrt = Math.pow(x, 2);

//   console.log(`куб числа = ${pow}  квадрат числа = ${sqrt}`);
// }

// resul(2);

// }
// 3. Напишите функции min и max, которые возвращают меньшее и большее из
// чисел a и b.
// {

// function minMax(a, b) {
//   if (a < b) {
//     let min = Math.min(a);
//     let max = Math.max(b);

//     console.log(
//       `Минимальные значения a = ${min}  максимальное значение b = ${max} `
//     );
//   } else {
//     let min = Math.min(b);
//     let max = Math.max(a);

//     console.log(
//       `Минимальные значения b = ${min}  максимальное значение a = ${max} `
//     );
//   }
// }

// minMax(34, 55);

// }
// 4. Напишите две функции: первая ф-ция должна возвращать массив с
// числовыми значениями, диапазон которых должен вводиться пользователем
// с клавиатуры; вторая – выводить полученный массив.
// {
 

// let num = prompt("Введите число");
// // let arr2 = [];
// while (num !== "" && !isNaN(num)) {
//   arr2.push(Number(num));
//   num = prompt("Введите число");
// }

// arr2.sort((a, b) => a - b);
// console.log(arr2);

sum = prompt('введите число ', '123');
//sum = prompt('введите число ', '123');



      let arr = [];
    function num(str) {
     if (num !== "" && !isNaN(num)) {
        arr.push(Number(num));

      }
//    }
 }
 console.log(arr);
 num = prompt('введите число ', '123');
// 

// }
// 5. Сделайте функцию isEven() (even - это четный), которая параметром
// принимает целое число и проверяет: четное оно или нет. Если четное - пусть
// функция возвращает true, если нечетное — false.
// {
  // function isEven(){
  //   for (var i = 0; i < arguments.length; i++) {

  //   }



  // }

// }
// 6. Напишите ф-цию, в которую передается массив с целыми числами.
// Верните новый массив, где останутся лежать только четные из этих чисел.
// Для этого используйте вспомогательную функцию isEven из предыдущей
// задачи.
// {

// }
// 7. Напишите ф-цию, которая рисует следующую пирамидку (исп. вложенные
// циклы):
// 1
// 22
// 333
// 4444
// 55555
// 666666
// 7777777
// 88888888
// 999999999
// Кол-во рядов должно вводиться параметром. Если пользователь ввел доп.
// параметр, непредусмотренный ф-цией по умолчанию - один любой символ,
// кроме пробела, то пирамида должна быть нарисована этим символом,
// например:
// *
// **
// ***
// ****
// *****
// ******
// *******
// ********
// *********
// {

// }
// 8. Напишите ф-цию, которая рисует равнобедренный треугольник из
// звездочек:
// *
// ***
// *****
// *******
// *********
// Кол-во рядов должно вводиться с клавиатуры. Доп., напишите такую же фцию, но которая выведет перевернутый треугольник.
// {

// }
// 9. Напишите ф-цию, которая возвращает массив заполненный числами
// Фибоначи от 0 до 1000.
// {

// }
// 10. Дано число. Сложите его цифры. Если сумма получилась более 9-ти,
// опять сложите его цифры. И так, пока сумма не станет однозначным числом
// (9 и менее). Исп. Рекурсию.
// {

// }
// 11. Дан массив с числами (передается параметром). Выведите
// последовательно его элементы, используя рекурсию и не используя цикл.
// {

// }
// 12. Напишите ф-цию, запрашивающую имя, фамилия, отчество и номер
// группы студента и выводящую введённые данные в следующем виде:
// *****************************
// * Домашняя работа: «Функции» *
// * Выполнил: студент гр. W4017 *
// * Иванов Иван Иванович *
// *****************************
// Размер рамки должен определятся автоматически по самой длинной строке.
// Рамку вывести в консоль.
// {

// }
// 13. Напишите ф-цию, которая должна проверить правильность ввода адреса
// эл. почты, неиспользуя регулярные выражения. Почта верна при условии:
// a. весь адрес не должен содержать русские буквы и спецсимволы, кроме
// одной «собачки», знака подчеркивания, дефиса и точки, причем они не могут
// быть первыми и последними в адресе, и идти подряд, например: «..», «@.»,
// «.@» или «@@», «_@», «@-», «--» и т.п.
// b. имя эл. почты (до знака @) должно быть длиной более 2 символов, причем
// имя может содержать только буквы, цифры, но не быть первыми и
// единственными в имени, и точку;
// c. после последней точки и после @, домен верхнего уровня (ru, by, com и
// т.п.) не может быть длиной менее 2 и более 11 символов.
// {

// }
